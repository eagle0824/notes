命令行窗口操作命令
	ctrl + b	后移动一个字符
	ctrl + f	前移动一个字符
	DEL		删除左边字符
	ctrl + d	删除光标当前字符
	ctrl + a	光标移动到行首
	ctrl + e	光标移动到行尾
	ctrl + l	清屏
	ctrl + w	剪切一个单词
	ctrl + k	剪切光标当前位置到最后、
	ctrl + y	将之前剪切的命令，复制到当前光标位置






1	eog filename	查看图片filename

2	nautilus path		可视化查看文件夹命令

3	mount 命令
		mount [-t type] [-o options] device dir
		mount -o remount,ro newdir	//重新挂载更改权限,只读权限
	-t通常不用置顶,命令会自动匹配
		光盘				iso9660
		dos fat16			msdos
		windows fat32			vfat
		windows ntfs			ntfs
		windows 文件网络共享		smbfs
		unix(linux)文件网络共享	nfs
	-o 描述挂载方式(默认为rw)
		loop:	把一个文件当成硬盘分区挂载在系统上
		ro:	只读方式挂载
		rw:	读写方式挂载
		iocharset	指定访问文件所用的字符集(uft8中文)
	挂载u盘
		sudo fdisk -l /dev/sd*	//查看u盘.路径 若路径为/dev/sda1
		sudo mount /dev/sda1 /mnt/media	//将/dev/sda1挂载到/mnt/media
		sudo mount -t vfat -o iocharset=utf8 /dev/sdc1 /mnt/media	// -t 表示磁盘格式为fats -o表示iocharset=utf8显示中文
		sudo umount /mnt/media			//卸载/dev/sda1

	umount	执行时,发现device is busy
		lsof(list open file) 列出打开的所有文件目录和共享库
		lsof /mnt/media
		kill -9 pid
		再执行umount命令即可


	lsof | grep pid	查询pid进程打开的文件
	lsof /path		显示打开path文件，所有进程！


4	ubuntu切换用户
	sudo su		切换root用户
	su archermind		切换到"archemrind"用户

5	scp document.txt archermind@10.11.26.89:/home/archermind/	本地文件拷贝到(用户名为archermind)10.11.26.89上/home/archermind下,
	scp archermind@archermind@10.11.26.89:/home/archermind/a.txt ./


6	查看linux 内核版本等信息
	umane -a
	94:71:AC:17:8A:06

7	unbuntu下截图工具
	命令scrot -s /home/work/a.png

8	du -b filename/foldername 查看文件大小byte	-h G/B/易读模式
	du -s filename/foldername 查看文件/文件夹大小
	df -h查看 所有系统文件及磁盘信息
	df -h --max-depth=1 filepath/folderpath


	du -sh * | sort -nr

9	ps

	kill -9 pid
	/system/bin/rild

10	文件类型	ls -l
	d	文件夹
	l	链接文件	(软链接	ln -s sourcefile	linkedfile;硬链接	ln -d sourcefile	linkedfile;区别,删除源文件后,软链接无效,硬链接,直接成为源文件副本)
	-	文件
	s	sock文件(见/dev)
	b	block文件(见/dev)
	c	字符文件

	ls -sh	易读形式显示文件大小	-s  size	-h 易读格式显示文件大小

11	touch 文件名 创建文件/修改文件各种时间
	touch * 修改当前目录下文件修改时间

12	chattr	设置文件属性	chattr +i filename (文件filename,不能删除)
	lsattr	查看文件属性

13	解压命令

    参数 -z filter the archive through gzip
         -j filter the archive through bzip2
         -c create archive
         -x extract files from an archive

	tar -xzvf httpd-2.0.48.tar.gz	z表示.tar.gz文件
	tar -xjvf httpd-2.0.52.tar.bz2   j表示.tar.bz2文件
	其中bz2格式的压缩比例要高于gz

     tar -zxvf Test.tar.gz -C DIR 解压文件到制定目录
     tar -f Test.tar.gz --list 显示压缩文件内容

	管道边压缩边传输：
	本地：
	    tar czvf - src_path | tar xzvf - -C dest_path
	局域网：
	    tar czvf - src_path | ssh username@192.168.1.x tar xzvf - -C dest_path

    tar -tzvf name.tar.gz   显示文件内容
    tar -tjvf name.tar.bz2  显示文件内容

    解压特定目录或文件
    tar -jxvf name.tar.bz2 dir/file 解压name.tar.bz2文件中的dir/file

    如：Music.tar.bz2 压缩包
    部分文件
        Music/res/
        Music/src/
        Music/libs
        Music/AndroidManifest.xml

    解压src目录
        tar -jxvf Music.tar.bz2 Music/res
    解压AndroidManifest.xml文件
        tar -jxvf Music.tar.bz2 Music/AndroidManifest.xml


14	curl	从服务器获取文件
	curl http://android.git.kernel.org/repo > repo

15	source filename 等价于 . filename
	在当前bash下,读取并执行filename中的命令

16	sudo apt-get install name	安装
	sudo apt-get remove name	卸载

17	下面是使用linux 自带的dd命令测试硬盘的读写速度。

    time有计时作用，dd用于复制，从if读出，写到of.if=/dev/zero不产生IO,因此可以用来测试纯写速度。同理of=/dev/null不产生IO,可以用来测试纯读速度。bs是每次读或写的大小，即一个块的大小，count是读写块的数量。

    测/data目录所在磁盘的纯写速度：

    [root@nagios ~]# time dd if=/dev/zero of=/var/test bs=8k count=1000000

    1000000+0 records in

    1000000+0 records out

    8192000000 bytes （8.2 GB） copied, 52.5749 seconds, 156 MB/s

    real    0m55.841s

    user    0m0.507s

    sys     0m15.706s

    ##红色部分是因为使用了time命令才显示的，因此需要time命令来计算复制的时间。

    测/data目录所在磁盘的纯读速度：

    [root@nagios ~]# time dd if=/var/test of=/dev/null bs=8k

    1000000+0 records in

    1000000+0 records out

    8192000000 bytes （8.2 GB） copied, 49.0088 seconds, 167 MB/s

    real    0m49.025s

    user    0m0.559s

    sys     0m6.383s

    测读写速度：

    [root@nagios ~]# time dd if=/var/test of=/tmp/test bs=64k

    125000+0 records in

    125000+0 records out

    8192000000 bytes （8.2 GB） copied, 129.239 seconds, 63.4 MB/s

    real    2m9.251s

    user    0m0.114s

    sys     0m21.494s

    看来这个测试结果还不错，嘿嘿

    备注：理论上测试复制量越大测试结果越准确。

    正常测试的时候可能不止测试一边，可能会需要很多遍求取平均值，这个测试结果在普通的重定向是没有效果的 之后 google 了一下 用下面的方式重定向到一个文件

    dd if=/dev/zero of=/var/test bs=8k count=1000000  2》 info

    这样测试的结果就到info文件里面了



18 	cat /proc/kmsg
	察看内核log


19	快速匹配之前输入的命令
	ctrl + R
	提示之前输入过的命令，输入开始字符匹配

	输入	history
	执行	！number
	同样功能

20	zic -d directory filename	（用于timezone文件解析）
	此命令将timezone file，解析并按照location创建目录
	Zic reads text from the file(s) named on the command line and creates the time conversion information files specified in this input. If a filename is -, the standard input is read.

21	grep -v string
	查看不包含“string”的内容

22	locale 获取本地设置相关信息
	locale -a	获取系统支持的本地化设置
	LC_ALL=C	C是unix系统原始locale，sort时添加LC_ALL=C，是屏蔽本地化设置，按照byte排序，速度比较快
23	命令行窗口输入制表符	ctrl-v ctrl-i



24 whereis
	查询命名
	for example		whereis ssh
				whereis bash
	which ssh

25	重定向符号>
	>> 追加
	ls > file	执行ls命令，结果不是输出到屏幕，二十写入文件file
	ls -l >> file	将结果追加到file文件

	cmd > file 把 stdout 重定向到 file 文件中；

	cmd >> file 把 stdout 重定向到 file 文件中(追加)；

	cmd 1> fiel 把 stdout 重定向到 file 文件中；

	cmd > file 2>&1 把 stdout 和 stderr 一起重定向到 file 文件中；

	cmd 2> file 把 stderr 重定向到 file 文件中；

	cmd 2>> file 把 stderr 重定向到 file 文件中(追加)；

	cmd >> file 2>&1 把 stderr 和 stderr 一起重定向到 file 文件中(追加)；

	cmd < file >file2 cmd 命令以 file 文件作为 stdin，以 file2 文件作为 stdout；

	cat <>file 以读写的方式打开 file；

	cmd < file cmd 命令以 file 文件作为 stdin；

	cmd << delimiter Here document，从 stdin 中读入，直至遇到 delimiter 分界符。



	cat food 2>&1 >filecat: can't open food
	cat food >file 2>&1
	Bourne或Korn shell经常提出的问题是，为什么只有第二个命令才能把标准输出(stdout)和标准错误(stderr)重定向到文件file中？
	在第一个命令中，shell里首先是2>&1，意味着标准错误重定向到与标准输出同样的地方。这无任何效果，因为两部分都重定向到屏幕上(省缺)。然后>file重定向标准输出到file，但标准错误仍然定向到终端。
	在第二个命令中，shell里首先是>file，意味着标准输出重定向到file。然后 2>&1将标准错误重定向到与标准输出同样的地方，既file。这也是我们想要的。

26	cd -          #回到上次所在目录，这个技巧我原来还真是不知道，感觉还是比较有用，省略了很多输入。

	cd !$          #把上个命令的最后参数作为输入。cd -     再执行cd ！$相当于再次执行cd -

	cd           #回到主目录

	cd ~         #同样也是回到主目录，一般用于进入主目录的下级目录


27	export
		export [-fn] [name[=value] ...] or export -p
		创建环境变量或者方法[-f]
		export或者export -p显示所有变量定义
		export设置的环境变量，保存在内存中，用户推出当前shell后就丢失，要想每次开机自动load可以保存在/etc/profile（全局用户） 或者/home/.bashrc（当前用户）文件中
	unset
		unset [-f] [-v] [name ...]
		撤销环境变量或方法[-f]

28	* dirs:显示目录栈

	* pushd:将目录压入目录栈

	* popd:将目录弹出目录栈

29	od comand
	od - dump files in octal and other formats
	od [option] filename
	od -a filename	以字符查看文件
	od -b filename	以16进制数查看文件


30	修改用户密码
	（1）普通用户
	passwd 用户名
		输入之前用户密码，输入两次新密码
	（2）root用户
	passwd
     (3) 修改root用户密码
    sudo passwd root

31	alias 设置别名
	alias ls=‘ls -l’
	则执行ls 相当于执行ls -l

32 	tee	从标准输入读取数据，并将数据写入标准输出和文件
	adb logcat | tee file

33 	cut 截取字符串（man cut）
	echo hello | cut -c 2-4 输出（ello）

34 xclip
    xclip -sel clip < file 将file文件中的内容复制到剪切板上，Ctrl+V 复制

36 find 命令
    -prune 参数 排除某个目录  -o 或者
    find ./ -name aaa -prune -o -name *.java   在当前目录下查找java文件，跳过目录aaa

    -print0
    find ./ -name *.java -print 等价于 find ./ -name *.java
    查询结果以换行符结束

    find ./ -name *.java -print0
    查询结果以'\0'空字符结束

    find ./ -type f -name *.java -print0 | xargs -0 grep --color -n "aaa"
    在当前目录的java文件中查找字符串“aaa”

37 格式化sdcard

   (1) mount 查看设备
    mount

   /dev/sdb1 on /media/B917-F8EC type vfat (rw,nosuid,nodev,uid=1000,gid=1000,shortname=mixed,dmask=0077,utf8=1,showexec,flush,uhelper=udisks)
    是我们的sdcard设备
   (2) fdisk 查看分区
    fdisk /dev/sdb

    p(查看分区)

    Command (m for help): p


    Disk /dev/sdb: 3965 MB, 3965190144 bytes
    128 heads, 63 sectors/track, 960 cylinders, total 7744512 sectors
    Units = sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
    Disk identifier: 0x00000000

       Device Boot      Start         End      Blocks   Id  System
       /dev/sdb1

    显示仅有一个分区

    若有多个分区此处要执行删除分区命令(d)
    q 退出
    (3)umount /dev/sda1
    (4)格式化
        mkfs.vfat /dev/sda1
    即可完成对sdcard的格式化
    查看：
        mkdir /mnt/sda1 创建挂在目录
        mount /dev/sda1 /mnt/sda1 将sdcard设备挂载到/mnt/sda1
        df -h /mnt/sda1 查看sdcard容量

38 查看系统内存使用情况
    free
    free -m 以M为单位查看系统内存使用情况

    清理内存
    sync
    echo 3 > /proc/sys/vm/drop_caches

39 dpkg --help
    dpkg -l 显示安装包信息
    dpkg -i *.deb安装deb文件

40 ascii
    打印八进制、十六进制和十进制的ASCII码表！

41 cal
    日历

42 xxd
    xxd filename.bin 十六进制文集那转化为二进制文件
    xxd -i data.bin     十六进制转化成c数组

43
    update-alternatives是ubuntu系统中专门维护系统命令链接符的工具，通过它可以很方便的设置系统默认使用哪个命令、哪个软件版本，

    Commands:
      --install <link> <name> <path> <priority>
          [--slave <link> <name> <path>] ...
        add a group of alternatives to the system.
      --remove <name> <path>   remove <path> from the <name> group alternative.
      --remove-all <name>      remove <name> group from the alternatives system.
      --auto <name>            switch the master link <name> to automatic mode.
      --display <name>         display information about the <name> group.
      --query <name>           machine parseable version of --display <name>.
      --list <name>            display all targets of the <name> group.
      --get-selections         list master alternative names and their status.
      --set-selections         read alternative status from standard input.
      --config <name>          show alternatives for the <name> group and ask the
        user to select which one to use.
      --set <name> <path>      set <path> as alternative for <name>.
      --all                    call --config on all alternatives.

example config java (1062 是优先级对auto时候有影响)

    sudo update-alternatives --install /usr/bin/jar jar ~/jdk1.6.0_45/bin/jar 1062
    sudo update-alternatives --install /usr/bin/java java ~/jdk1.6.0_45/bin/java 1062
    sudo update-alternatives --install /usr/bin/javac javac ~/jdk1.6.0_45/bin/javac 1062
    sudo update-alternatives --install /usr/bin/javap javap ~/jdk1.6.0_45/bin/javap 1062
    sudo update-alternatives --install /usr/bin/javadoc javadoc ~/jdk1.6.0_45/bin/javadoc 1062

    sudo update-alternatives --config jar
    sudo update-alternatives --config java
    sudo update-alternatives --config javac
    sudo update-alternatives --config javap
    sudo update-alternatives --config javadoc

    注意：若在~/.bashrc 中配置了jdk路径，java -version 发现不起作用，有可能设置了update-alternatives


44 windows下文本文件在linux下打开乱码
    原因: 在windows环境中中文压缩一般为gbk，而在linux环境中为utf8
    通过下面命令，即可生成utf8文件，在linux下打开就可以正查显示
        iconv -f gbk -t utf8 ReadMe.txt -o ReadMe.txt.utf8


45  桌面显示中文，但是终端中文件显示英文

    1) export LANG=en_US
    2) xdg-user-dirs-gtk-update
        这时会弹出一个配置界面，将所有中文的用户目录切换到英文。选中不再提示，确定。
        这时，会删除没有内容的用户目录，但有内容的用户目录会保持。并创建相应的英文目录：
        Desktop/Download/Templates/Public/Documents/Music/Pictures/Videos
        此时，在位置里看到的常用中文目录已经换成英文目录。只需将原中文目录的内容拷贝到相应英文目录，并删除中文目录即可。
    3) 然后再执行
        export LANG=zh_CN.UTF-8
        以显示中文。
    注销后重新进入系统

46 不离开当前目录，需到其它目录执行一些操作可以用()将命令括起来
    如(cd /work/source/ && ls)

47 ctrl + l 清空屏幕等价于 clear

48 fg、bg、jobs、&、ctrl + z都是跟系统任务有关的，虽然现在基本上不怎么需要用到这些命令，但学会了也是很实用的

    & 最经常被用到

        这个用在一个命令的最后，可以把这个命令放到后台执行

    ctrl + z
        可以将一个正在前台执行的命令放到后台，并且暂停

    jobs
        查看当前有多少在后台运行的命令

    fg
        将后台中的命令调至前台继续运行

        如果后台中有多个命令，可以用 fg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)

    bg
        将一个在后台暂停的命令，变成继续执行
        如果后台中有多个命令，可以用bg %jobnumber将选中的命令调出，%jobnumber是通过jobs命令查到的后台正在执行的命令的序号(不是pid)

49 分割压缩/解压文件
    tar -czvp -f - BackCar | split -b 500k - backcar.tar.gz.
    解压
    cat backcar.tar.gz.* | tar -jxv

50 修改ubuntu 系统启动顺序
    sudo vim /boot/grub/grub.cfg
    修改 set default="0"
    0 代表第一个menuentry
    把0 改成对应的系统内核的index

    或者直接修改menuentry
    把linux和initrd改成对应的旧的版本就可以了

51 strings command
    strings命令能能够打印出给定文件中的可打印字符序列长度为4（或者参数中制定长度）字符串

52 linux 桌面中文变英文
    export LANG=en_US
    xdg-user-dirs-gtk-update
    export LANG=zh_CN.UTF-8

53 linux 修改用户名
    sudo -s 输入当前帐号密码进入root
    passwd 创建你的root密码

    passwd 原名字 # 此步应该是修改密码，会提示输入新密码

    在grub界面进入recovery mode
    命令行执行mount -o remount,rw / 让根目录拥有读写权限

    chfn -f 新名字 原名字 # 修改用户名
    usermod -l 新名字 -d /home/新名字 -m 原名字 # 修改登录名
    groupmod -n 新名字 原名字 # 修改用户组

54 查看系统中所有PCI总线设备或连接到该总线上的所有设备的工具(如网卡型号等等)
    lspci

55 安装无线网卡驱动
    sudo apt-get update
    sudo apt-get install --reinstall bcmwl-kernel-source

56 minicom

    1) sudo minicom -s 进入设置界面
    2) 选择 Serial port setup
    3)   A - Serial Device 路径设置为  /dev/ttyUSB0
         E - Bps/Par/Bits  波特率设置为 921600 8N1
         F - Hardware Flow Control 波特率设置为 No
         G - Software Flow Control 波特率设置为 No
    4) 选择
        Save setup as dfl 设为默认设置


    ctrl+a+l 保存log到本地当前路径mincap.log文件

57 hexedit
    man hexedit 查看帮助
    enter --> 跳转到制定位置
    ctrl + w ---> 保存
    ctrl + x ---> 退出
    Backspace ---> 撤销修改
    Tab ---> 切换内容

58 linux删除用户(username)
    sudo userdel -r username

59 linux下非root 用户获得/dev/ttyUSB0权限

    ls -al /dev/ttyUSB0

    crw-rw---- 1 root dialout 188, 0  6月 18 09:57 /dev/ttyUSB0

    临时生效
    sudo chmod 666 /det/ttyUSB0

    永久生效
    sudo usermod -aG dialout username
    (将当前用户username添加的dialout组中, 执行完之后需要logout一次)

60  ctrl-alt-F1 ubuntu进入命令行模式
    ctrl-alt-F7 ubuntu进入可视化模式


61 安装新版本git
    sudo apt-add-repository ppa:git-core/ppa
    sudo apt-get update
    sudo apt-get install git

62 安装最新版Oracle JDK
    sudo apt-add-repository ppa:webupd8team/java
    sudo apt-get update
    sudo apt-get install oracle-java8-installer

63 安装最新版OpenJDK
    ppa 网站 https://launchpad.net/ppas

    search openjdk

    sudo apt-add-repository ppa:openjdk-r/ppa
    sudo apt-get update
    sudo apt-get install openjdk-8-jdk

    查询安装包
    sudo apt-cache search OpenJDK

64 安装搜狗输入法

    1)  sudo apt-add-repository ppa:fcitx-team/nightly
        sudo apt-get update
    2) 接下来就是在终端中输入im-config，这时会出现一个对话框，点击OK，有一个对话框，点击Yes,如果上面是fcitx，就不用管，直接关闭；如果不是，就修改上面的ibus为fcitx.点击OK即可。又会出现一个对话框，接着就是OK，最后重启电脑。
    3)  fcitx-config-gtk3出现对话框。点击对话框左下角的（+）按钮. 然后，取消Only Show Current Language（很重要，否则不能找到刚安装过的搜狗输入法!）最后，在输入框中输入sogou，选中点击OK即可。

65 zip只存储不压缩
    zip -r -0 bootanimation.zip part0 part1 desc.txt

66 zlib

   下载源码　 http://www.zlib.net/
   1) tar -xzvf zlib-1.2.8.tar.gz
   2) cd zlib-1.2.8/
   3) ./configure && make && sudo make install

67 simg2img工具使用
    1)simg2img 解包
        simg2img ./bootlogo.img.ext4 /tmp/boologo.img
    2)mount loop
        mkdir /tmp/img
        sudo mount -t ext4 -o loop /tmp/bootlogo.img /tmp/img
    3)替换 /bootlogo/ReLoginCode.csv
    4)make_ext4fs -s -l 45M bootlogo.img.ext4 ./bootlogo

68 更新gcc/g++
    sudo add-apt-repository ppa:h-rayflood/gcc-upper
    sudo apt-get update

69 更新python
    sudo add-apt-repository ppa:fkrull/deadsnakes
    sudo apt-get update

70 删除file文件中的'\r'字符(解决window下编辑的脚本文件到linux运行出问题)
    sed -i 's/\r$//' filename

80 android查看cup使用率
adb shell top -m 10 -s cpu（-m显示最大数量，-s 按指定行排序）

81 实时读取minicom.cap
tail -f ./minicom.cap

82 cut 过滤文件显示
    cut -d \ -f 3
    -d  分隔符, 默认是TAB
    -f  filed  3 表示第三列

83 搜索Android.mk中的LOCAL_MODULE
find ./ -name Android.mk | xargs grep "LOCAL_MODULE := xxx"

84 更新电脑名称
sudo vim /etc/hostname 修改电脑名称
sudo vim /etc/hosts  修改127.0.1.1对应的主机名 
重启生效
Ubuntu16.04  通过右上角设置->关于电脑->设备名称修改
不需要重启
